from enum import Enum
import os
from typing import TYPE_CHECKING, Dict, Any, List, Optional
from .Options import KRtDLOptions

if TYPE_CHECKING:
    from . import KRtDLWorld

def make_config(world: "Kirby's Return to Dream Land"):
    options: KRtDLOptions = world.options
    config = {
        # "$schema": "https://randovania.org/randomprime/randomprime.schema.json",
        "inputIso": "Kirby's Return to Dream Land (USA) (En,Fr,Es).rvz",
        "outputIso": "krtdl_out.rvz",
        # "forceVanillaLayout": False,
        # "strg": get_strg(world),
        # "preferences": {
            # "forceFusion": bool(options.fusion_suit.value),
            # "cacheDir": "cache",
            # "qolGeneral": True,
            # "qolGameBreaking": True,
            # "qolCosmetic": True,
            # "qolCutscenes": "Skippable",
            # "qolPickupScans": True,
            # "mapDefaultState": "Always",
            # "artifactHintBehavior": "All",
            # "skipSplashScreens": bool(os.environ.get("DEBUG", False)),
            # "quickplay": bool(os.environ.get("DEBUG", False)),
            # "quickpatch": bool(os.environ.get("DEBUG", False)),
            # "quiet": bool(os.environ.get("DEBUG", False)),
            # "suitColors": {
                # "gravityDeg": world.options.gravity_suit_color.value or 0,
                # "phazonDeg": world.options.phazon_suit_color.value or 0,
                # "powerDeg": world.options.power_suit_color.value or 0,
               #  "variaDeg": world.options.varia_suit_color.value or 0
            # }
        # },
        # "tweaks": get_tweaks(world),
        # "gameConfig": {
           #  "mainMenuMessage": "Archipelago Metroid Prime",
           #  "startingRoom": f"{world.starting_room_data.area.value}:{world.starting_room_data.name}",
            # "springBall": spring_check(options.spring_ball.value),
            # "warpToStart": True,
            # "multiworldDolPatches": True,
            # "nonvariaHeatDamage": bool(options.non_varia_heat_damage.value),
            # "staggeredSuitDamage": options.staggered_suit_damage.value,
            # "heatDamagePerSec": 10.0,
            # "poisonDamagePerSec": 0.11,
            # "phazonDamagePerSec": 0.964,
            # "phazonDamageModifier": "Default",
            # "autoEnabledElevators": bool(options.pre_scan_elevators.value),
            # "skipRidley": ridley(options.final_bosses.value),
            # "removeHiveMecha": bool(options.remove_hive_mecha.value),
            # "multiworldDolPatches": False,
            # "startingItems": {
                # "combatVisor": True,  # starting_inventory(world, "Combat Visor"),
                # "powerBeam": starting_inventory(world, "Power Beam"),
               #  "scanVisor": starting_inventory(world, "Scan Visor"),
                # These are handled by the client
                # "missiles": 0,
                # "energyTanks": 0,
                # "powerBombs": 0,
                # "wave": starting_inventory(world, "Wave Beam"),
                # "ice": starting_inventory(world, "Ice Beam"),
                # "plasma": starting_inventory(world, "Plasma Beam"),
                # "charge": starting_inventory(world, "Charge Beam"),
                # "morphBall": starting_inventory(world, "Morph Ball"),
                # "bombs": starting_inventory(world, "Morph Ball Bomb"),
               # "spiderBall": starting_inventory(world, "Spider Ball"),
                # "boostBall": starting_inventory(world, "Boost Ball"),
                # "variaSuit": starting_inventory(world, "Varia Suit"),
                # "gravitySuit": starting_inventory(world, "Gravity Suit"),
                # "phazonSuit": starting_inventory(world, "Phazon Suit"),
                # "thermalVisor": starting_inventory(world, "Thermal Visor"),
                # "xray": starting_inventory(world, "X-Ray Visor"),
                # "spaceJump": starting_inventory(world, "Space Jump Boots"),
                # "grapple": starting_inventory(world, "Grapple Beam"),
                # "superMissile": starting_inventory(world, "Super Missile"),
                # "wavebuster": starting_inventory(world, "Wavebuster"),
                # "iceSpreader": starting_inventory(world, "Ice Spreader"),
                # "flamethrower": starting_inventory(world, "Flamethrower")
            # },
            # "disableItemLoss": True,
            # "startingVisor": "Combat",
            # "startingBeam": get_starting_beam(world),
            # "enableIceTraps": False,
            # "missileStationPbRefill": True,
           #  "doorOpenMode": "Original",
            # "etankCapacity": 100,
            # "itemMaxCapacity": {
              #   "Power Beam": 1,
              #   "Ice Beam": 1,
              #   "Wave Beam": 1,
              #   "Plasma Beam": 1,
              #   "Missile": 999,
             #    "Scan Visor": 1,
             #    "Morph Ball Bomb": 1,
              #   "Power Bomb": 99,
               #  "Flamethrower": 1,
               #  "Thermal Visor": 1,
               #  "Charge Beam": 1,
              #   "Super Missile": 1,
              #   "Grapple Beam": 1,
              #   "X-Ray Visor": 1,
              #   "Ice Spreader": 1,
              #   "Space Jump Boots": 1,
              #   "Morph Ball": 1,
              #   "Combat Visor": 1,
              #   "Boost Ball": 1,
              #   "Spider Ball": 1,
               #  "Power Suit": 1,
               #  "Gravity Suit": 1,
               #  "Varia Suit": 1,
              #   "Phazon Suit": 1,
               #  "Energy Tank": 99,
               #  "Unknown Item 1": 6000,
               #  "Health Refill": 999,
               #  "Unknown Item 2": 1,
              #   "Wavebuster": 1,
               #  "Artifact Of Truth": 1,
               #  "Artifact Of Strength": 1,
               #  "Artifact Of Elder": 1,
                # "Artifact Of Wild": 1,
                # "Artifact Of Lifegiver": 1,
               #  "Artifact Of Warrior": 1,
                # "Artifact Of Chozo": 1,
              #   "Artifact Of Nature": 1,
            #     "Artifact Of Sun": 1,
            #     "Artifact Of World": 1,
            #     "Artifact Of Spirit": 1,
            #     "Artifact Of Newborn": 1
            # },
            # "phazonEliteWithoutDynamo": True,
            # "mainPlazaDoor": True,
            # "backwardsLabs": True,
            # "backwardsFrigate": True,
            # "backwardsUpperMines": True,
            # "backwardsLowerMines": bool(world.options.backwards_lower_mines.value),
            # "patchPowerConduits": False,
            # "removeMineSecurityStationLocks": False,
            # "powerBombArboretumSandstone": True,
            # "artifactHints": make_artifact_hints(world),
           #  "requiredArtifactCount": world.options.required_artifacts.value
        # },
        # "levelData": make_level_data(world)
    }

    return config
